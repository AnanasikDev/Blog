<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on AnanaSeek4Jam</title><link>https://demo.stack.jimmycai.com/post/</link><description>Recent content in Posts on AnanaSeek4Jam</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 13 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://demo.stack.jimmycai.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Hi thereðŸ‘‹</title><link>https://demo.stack.jimmycai.com/p/about_me/</link><pubDate>Fri, 18 Jun 2021 00:00:00 +0000</pubDate><guid>https://demo.stack.jimmycai.com/p/about_me/</guid><description>&lt;img src="https://demo.stack.jimmycai.com/p/about_me/cover.jpg" alt="Featured image of post Hi thereðŸ‘‹" /&gt;&lt;p&gt;I am &lt;strong&gt;Ananaseek&lt;/strong&gt; or &lt;strong&gt;AnanseekJam&lt;/strong&gt; - a young enthusiast with passion for game development, programming and art. Having embarked on my journey in &lt;strong&gt;2020 Jan&lt;/strong&gt;, I learned &lt;strong&gt;Python&lt;/strong&gt;, &lt;strong&gt;C#&lt;/strong&gt; + &lt;strong&gt;Unity&lt;/strong&gt;, some &lt;strong&gt;C++&lt;/strong&gt;, &lt;strong&gt;C&lt;/strong&gt; and &lt;strong&gt;Java&lt;/strong&gt;. I also led 2 teams on gamejams (Mini Jam &lt;a href="https://itch.io/jam/mini-jam-162-heat"&gt;#162&lt;/a&gt; and &lt;a href="https://itch.io/jam/mini-jam-163-dessert"&gt;#163&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/unity/unity-original.svg" alt="Unity" width="28" height="28"/&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/csharp/csharp-original.svg" alt="C#" width="28" height="28"/&gt;
&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/cplusplus/cplusplus-original.svg" alt="C++" width="28" height="28"/&gt;
&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg" alt="Python" width="28" height="28"/&gt;
&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/c/c-original.svg" alt="C" width="28" height="28"/&gt;
&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/java/java-original.svg" alt="Java" width="28" height="28"/&gt;
&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/visualstudio/visualstudio-original.svg" alt="Visual Studio" width="28" height="28"/&gt;
&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/git/git-original.svg" alt="Git" width="28" height="28"/&gt;
&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/blender/blender-original.svg" alt="Git" width="28" height="28"/&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;ðŸ§Š-ed&lt;/em&gt; are &lt;strong&gt;freezed&lt;/strong&gt; projects&lt;br&gt;
&lt;em&gt;ðŸ”¨-ed&lt;/em&gt; are projects in &lt;strong&gt;development&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;ðŸ”¥-ed&lt;/em&gt; are my &lt;strong&gt;favourite&lt;/strong&gt; projects&lt;br&gt;
&lt;em&gt;ðŸ”’-ed&lt;/em&gt; are &lt;strong&gt;finished&lt;/strong&gt; projects &lt;br&gt;&lt;/p&gt;
&lt;h2 id="games"&gt;Games
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="https://ananasikdev.github.io/TheSwapEngageWeb/"&gt;The Swap: EngageðŸ§ŠðŸ”¥&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/Compile"&gt;CompileðŸ”¥ðŸ”¥ðŸ”¨&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/LollyJump"&gt;Lolly JumpðŸ”¥ðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/UxClicker"&gt;UxClickerðŸ”¥ðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/Outlander"&gt;OutlanderðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/Strategy"&gt;Guns Vs Monsters (REMAKE)&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/SpaceTime"&gt;Space TimeðŸ§Š&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/FerventLonging"&gt;Fervent Longing (MiniJam #162)ðŸ”¥ðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/Dessert"&gt;Tiny Kiosk (MiniJam #163)ðŸ§Š&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/RecycleFactory"&gt;Recycle FactoryðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/UniverseJam"&gt;Inevitable (UniverseJam #1)ðŸ”¥ðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="libraries--assets"&gt;Libraries &amp;amp; Assets
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/Willow"&gt;Willow AssetðŸ§ŠðŸ”¥&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/Hexagon"&gt;Hexagon LibraryðŸ”¥ðŸ”¨&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/FrameRateDebugger"&gt;FPS debuggerðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/EasyDebug"&gt;EasyDebugðŸ”¥ðŸ”¨&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="other"&gt;Other
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/FileArchivator"&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg" alt="Python" width="16" height="16"/&gt; File archivatorðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/FlappyBirdAI"&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/csharp/csharp-original.svg" alt="C#" width="16" height="16"/&gt; Genetic algorithm learning to play Flappy BirdðŸ”¥ðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/Calculator"&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/java/java-original.svg" alt="Java" width="16" height="16"/&gt; CalculatorðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/MinecraftMod"&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/java/java-original.svg" alt="Java" width="16" height="16"/&gt; Silly Minecraft mod&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/RacingCVController"&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg" alt="Python" width="16" height="16"/&gt; Computer Vision racing controllerðŸ”¥ðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/SFML-game"&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/cplusplus/cplusplus-original.svg" alt="C++" width="16" height="16"/&gt; 2D Game Engine + GameðŸ”¥ðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/Autoclicker"&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/java/java-original.svg" alt="Java" width="16" height="16"/&gt; Anti-anti-autoclickerðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/BrainfuckInterpreter"&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/c/c-original.svg" alt="C" width="16" height="16"/&gt; Brainfuck interpreterðŸ”¥ðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/3D-Model-disk-slicer"&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg" alt="Python" width="16" height="16"/&gt; Blender 3D model slicerðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnanasikDev/MarineEvolution"&gt;&lt;img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/cplusplus/cplusplus-original.svg" alt="C++" width="16" height="16"/&gt; Genetic brain evolution simulationðŸ”’&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I have also been contributing as a translator to other projects such as &lt;a href="https://www.hedycode.com/"&gt;Hedy&lt;/a&gt; and &lt;a href="https://store.steampowered.com/app/2827230/Wild_Assault/"&gt;Wild Assault&lt;/a&gt;. More about it at &lt;a href="https://hosted.weblate.org/user/Ananaseek/"&gt;Weblate&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Articles:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/AnanasikDev/5428d58d26ef165ca74457f8ba163290"&gt;Unity: Islands Generator&lt;/a&gt; (2022-08)&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@furryananasik/software-driven-devices-essay-2f32cc913ea2"&gt;Software-Driven Devices: essay&lt;/a&gt; (2024-11)&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/AnanasikDev/9e936cda383ba824bfe58263cae9e07a"&gt;How to create a Minecraft server without hustle&lt;/a&gt; (2024-11)&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@furryananasik/3d-models-to-real-life-figures-bc7ba4def5f3"&gt;3D models to real life figures&lt;/a&gt; (2025-08)&lt;br/&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;Contact via Discord: Ananaseek#5568&lt;/p&gt;
&lt;p&gt;My &lt;a href="https://ananasikdeveloper.itch.io/"&gt;itch.io&lt;/a&gt;&lt;br&gt;
My &lt;a href="https://www.artstation.com/ananasikfurry"&gt;ArtStation&lt;/a&gt;&lt;br&gt;
My models on &lt;a href="https://www.cgtrader.com/designers/ananasik"&gt;CGTrader&lt;/a&gt;, &lt;a href="https://sketchfab.com/furryananasik"&gt;Sketchfab&lt;/a&gt; and &lt;a href="https://www.turbosquid.com/Search/Artists/Ananaseek"&gt;TurboSquid&lt;/a&gt;&lt;br&gt;&lt;/p&gt;</description></item><item><title>3D models to real life figures</title><link>https://demo.stack.jimmycai.com/p/3d_to_real_life/</link><pubDate>Wed, 13 Aug 2025 00:00:00 +0000</pubDate><guid>https://demo.stack.jimmycai.com/p/3d_to_real_life/</guid><description>&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/cover.jpg" alt="Featured image of post 3D models to real life figures" /&gt;&lt;h1 id="3d-models-to-real-life-figures"&gt;3D models to real life figures
&lt;/h1&gt;&lt;p&gt;Today I want to share the process behind my latest DIY project: a cardboard tiger figure.&lt;/p&gt;
&lt;p&gt;Full code, blender file and usage instructions are available on &lt;a class="link" href="https://github.com/AnanasikDev/3D-Model-disk-slicer" target="_blank" rel="noopener"
&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation
&lt;/h2&gt;&lt;p&gt;I have become a huge fan of large felines. As my obsession grows, I am searching for new ways to connect with their spirits. One such way is this 3D model, which now sits on my desktop.&lt;/p&gt;
&lt;p&gt;The tiger is my favourite animal, slightly ahead of the cheetah and the leopard. Hopefully, I will be able to create models of them all, although the technology I am about to showcase in this article is rather tedious.&lt;/p&gt;
&lt;h2 id="plan"&gt;Plan
&lt;/h2&gt;&lt;p&gt;My plan was rendered as following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get a 3D model to recreate&lt;/li&gt;
&lt;li&gt;Find a way to convert the model into an atlas&lt;/li&gt;
&lt;li&gt;Trace and cut out the pieces&lt;/li&gt;
&lt;li&gt;Glue all the pieces together&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sounds like not much.&lt;/p&gt;
&lt;h2 id="step-1-3d-model"&gt;Step #1: 3D model
&lt;/h2&gt;&lt;p&gt;Even though I had experience in 3D sculpting in Blender (see &lt;a class="link" href="https://www.artstation.com/ananasikfurry" target="_blank" rel="noopener"
&gt;Artstation&lt;/a&gt;), I wanted to focus more on bringing it to life, rather than making another virtual sculpt. So I found one online on &lt;a class="link" href="https://www.blenderkit.com/asset-gallery-detail/f4c14f74-7f7b-4962-825f-b8283daa2c57/" target="_blank" rel="noopener"
&gt;blenderkit&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="step-2-atlas"&gt;Step #2: Atlas
&lt;/h2&gt;&lt;p&gt;Having found a suitable model, I was then standing upon a real challenge: I had to find a way to convert it into slices of specific thickness so that I could trace individual pieces and then glue them together.&lt;/p&gt;
&lt;p&gt;I already had experience working with &lt;code&gt;Blender&lt;/code&gt; and I didn&amp;rsquo;t mind getting more, so it was out of question what software to use. However, out of the box &lt;code&gt;Blender&lt;/code&gt; doesn&amp;rsquo;t provide the functionality that I needed (obviously) so I had to come up with my own solution.&lt;/p&gt;
&lt;p&gt;For that I wrote a &lt;a class="link" href="https://github.com/AnanasikDev/3D-Model-disk-slicer/blob/main/tiger_slicer.py" target="_blank" rel="noopener"
&gt;python script&lt;/a&gt; to slice my model into pieces of specific thickness, essentially like &lt;a class="link" href="https://en.wikipedia.org/wiki/Magnetic_resonance_imaging" target="_blank" rel="noopener"
&gt;MRT&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;First, the script calculates the positions and normals of all the planes that will be used to cut the model. The aim when cutting is to obtain a slice of geometry that corresponds to the intersection of the model and the cutting plane. This intersection, which is an edge loop, is then extruded and capped at both ends to create a single slice.&lt;/p&gt;
&lt;p&gt;Note that a single slice may consist of multiple physically unrelated pieces. In this case the script fills them independently as desired. This was necessary in my case because the middle layers contained several paws, and all the pieces had to be formed correctly.&lt;/p&gt;
&lt;p&gt;This process it is then repeated as many times as needed to cover the entire model.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;In &lt;code&gt;Blender&lt;/code&gt; it looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step2/screenshot1.png"
width="1018"
height="974"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step2/screenshot1_hu_ae8e39f7b18e7c76.png 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step2/screenshot1_hu_8f706640edfb51b3.png 1024w"
loading="lazy"
alt="Model sliced in the Y axis"
class="gallery-image"
data-flex-grow="104"
data-flex-basis="250px"
&gt;
&lt;em&gt;Model sliced in the Y axis&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step2/screenshot2.png"
width="1023"
height="957"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step2/screenshot2_hu_1eff4a00b04e6c44.png 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step2/screenshot2_hu_492c9d41eb2bc5c1.png 1024w"
loading="lazy"
alt="Model sliced in the Z axis"
class="gallery-image"
data-flex-grow="106"
data-flex-basis="256px"
&gt;
&lt;em&gt;Model sliced in the Z axis&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Moreover, since my plan was to trace all the pieces by hand (by placing a sheet of paper on a tablet) I added a mode to my script to automatically scatter all the pieces on a flat plane like so:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step2/atlas4.jpg"
width="650"
height="650"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step2/atlas4_hu_d72e9c2098d577ac.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step2/atlas4_hu_87d70c9629335864.jpg 1024w"
loading="lazy"
alt="Atlas"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
&gt;&lt;/p&gt;
&lt;p&gt;The checker pattern you see here is a special material I made that simulates correct physical size, using the scale value from the script that you initially set. One square represents exactly one centimeter.&lt;/p&gt;
&lt;p&gt;At this point I had everything I needed to start the tedious manual work.&lt;/p&gt;
&lt;h2 id="step-3-trace-and-prepare"&gt;Step #3: Trace and prepare
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step3/img1.jpg"
width="1280"
height="721"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step3/img1_hu_b742e79889f15c40.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step3/img1_hu_ae06a46b6fee8030.jpg 1024w"
loading="lazy"
alt="img1"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;
&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step3/img2.jpg"
width="1280"
height="721"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step3/img2_hu_250440a25c31edc9.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step3/img2_hu_ed73de16fc679e95.jpg 1024w"
loading="lazy"
alt="img2"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;&lt;/p&gt;
&lt;p&gt;Evenings got filled with tracing shapes over and over, then glueing paper and cardboard sheets, then cutting all pieces out.&lt;/p&gt;
&lt;h2 id="step-4-assembling"&gt;Step #4: Assembling
&lt;/h2&gt;&lt;p&gt;Lastly, I had to glue all the pieces together. At this stage I realized that I miscalculated the thickness of my cardboard which appeared to be 1.5mm instead of 1mm thick. I compressed many of those pieces using anything heavy I had at home, and it helped. However I was inconsistent about which pieces I compress and which I do not, which resulted in a tilted model and nuances throughout the model.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step4/img1.jpg"
width="1280"
height="721"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step4/img1_hu_973476ebffd6d9c5.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step4/img1_hu_9820866d3e31d01e.jpg 1024w"
loading="lazy"
alt="img1"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;&lt;/p&gt;
&lt;p&gt;I had more than a hundred pieces so to simplify the process I made an indexation system: first number is the layer index (1-51) and second number is the piece index within its layer (none or 2-5).&lt;/p&gt;
&lt;p&gt;&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step4/img2.jpg"
width="1280"
height="721"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step4/img2_hu_8d79a5ce7e379c1d.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step4/img2_hu_2bd4f19b3faa09d2.jpg 1024w"
loading="lazy"
alt="img2"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Originally I wanted to strenthen the model with wooden sticks which would have become its framework. I cut out exact holes in the 3D model in &lt;code&gt;Blender&lt;/code&gt; and transferred them into the final pieces. It looked promising, but in the end, I hesitated and decided not to use them though. This is one of the main mistakes, because the final figure appeared to be quite wobbly and weak.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step4/img3.jpg"
width="721"
height="900"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step4/img3_hu_9b4016123179b305.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/step4/img3_hu_4a2b0dcb51760815.jpg 1024w"
loading="lazy"
alt="img3"
class="gallery-image"
data-flex-grow="80"
data-flex-basis="192px"
&gt;&lt;/p&gt;
&lt;h2 id="result"&gt;Result
&lt;/h2&gt;&lt;p&gt;As a result, I now have this lovely physical model of my beloved tiger. Its dimensions are 170 x 104 x 46 mm.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img1.jpg"
width="1280"
height="721"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img1_hu_a7af41f2d5245665.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img1_hu_fa21cda0a30ceba6.jpg 1024w"
loading="lazy"
alt="img1"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;
&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img2.jpg"
width="1280"
height="721"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img2_hu_cf21a7bd3cbf28d4.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img2_hu_d582e8c9460e9c91.jpg 1024w"
loading="lazy"
alt="img2"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;
&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img3.jpg"
width="1280"
height="721"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img3_hu_5e0c6376fc364061.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img3_hu_9abc14623084c21b.jpg 1024w"
loading="lazy"
alt="img3"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;
&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img4.jpg"
width="1280"
height="721"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img4_hu_27bf8421b985be7d.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img4_hu_33cbeb12fede816b.jpg 1024w"
loading="lazy"
alt="img4"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;
&lt;img src="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img5.jpg"
width="1280"
height="721"
srcset="https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img5_hu_52a2070bf9160e23.jpg 480w, https://demo.stack.jimmycai.com/p/3d_to_real_life/images/result/img5_hu_df8bbfba747d1add.jpg 1024w"
loading="lazy"
alt="img5"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;&lt;/p&gt;
&lt;h2 id="thanks-for-reading"&gt;Thanks for reading!
&lt;/h2&gt;</description></item><item><title>How to setup your own minecraft server</title><link>https://demo.stack.jimmycai.com/p/how_to_make_a_minecraft_server/</link><pubDate>Wed, 27 Nov 2024 00:00:00 +0000</pubDate><guid>https://demo.stack.jimmycai.com/p/how_to_make_a_minecraft_server/</guid><description>&lt;h1 id="how-to-setup-your-own-minecraft-server-java-latest-version-your-hardware-free-officialhacked-online-20-players-safe"&gt;How to setup your own minecraft server (Java, latest version, your hardware, free, official/hacked, online, ~20 players, safe)
&lt;/h1&gt;&lt;h2 id="disclaimer"&gt;Disclaimer
&lt;/h2&gt;&lt;p&gt;This is not an article but rather an instruction I made for myself to not forget how to setup a server. I was using Windows and doing that for cracked vanilla minecraft 1.21.3 so I can&amp;rsquo;t say if it&amp;rsquo;s working correctly in different conditions. It should generally be a universal approach as Java, Minecraft client and server, and Playit.gg have official ports to Linux and Mac (AFAIK).&lt;/p&gt;
&lt;p&gt;This approach requires no use of console, no investments, you will have full control over your server. I listed pros and cons of it later in this note.&lt;/p&gt;
&lt;p&gt;Some of the tutorials/resources that I used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="https://www.youtube.com/watch?v=itVVhcid2_Q&amp;amp;ab_channel=KasaiSora" target="_blank" rel="noopener"
&gt;Host a Minecraft Server Without Port Forwarding Using Playit.gg &amp;ndash; video by KasaiSora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://www.youtube.com/watch?v=NK5lsDXIFnM&amp;amp;ab_channel=playit" target="_blank" rel="noopener"
&gt;Making your minecraft server public in 48 seconds without port forwarding
&amp;ndash; video by playit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://www.youtube.com/watch?v=iJiTsM2MT3c&amp;amp;ab_channel=KasaiSora" target="_blank" rel="noopener"
&gt;How To Make A Cracked Minecraft Server (Any Version)
&amp;ndash; video by KasaiSora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://help.minecraft.net/hc/en-us/articles/360058525452-How-to-Setup-a-Minecraft-Java-Edition-Server" target="_blank" rel="noopener"
&gt;How to Setup a Minecraft: Java Edition Server &amp;ndash; help.minecraft.nent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://cyberxgaming.com/how-to-create-a-minecraft-server-for-free/" target="_blank" rel="noopener"
&gt;How to create a Minecraft server for free!
&amp;ndash; cyberxgaming.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="steps"&gt;Steps:
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Install Java&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You have to have Java of the version corresponding to your desired minecraft version (for 1.18+ it is Java 17, for 1.21+ it is Java 21 etc). You can check which version you need to have &lt;a class="link" href="https://docs.mcserversoft.com/advanced/java-version" target="_blank" rel="noopener"
&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;choose and download your version on &lt;a class="link" href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener"
&gt;oracle website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;simply download it, run installer, nothing more to do here&lt;/p&gt;
&lt;hr&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Official minecraft server software&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Install minecraft official server setup software. It should be a file named &lt;code&gt;server.jar&lt;/code&gt; downloaded from &lt;a class="link" href="https://www.minecraft.net/en-us/download/server" target="_blank" rel="noopener"
&gt;official minecraft page&lt;/a&gt;. AFAIK only the latest MC release is available here. For a simple setup you won&amp;rsquo;t need console and running commands as opposed to what&amp;rsquo;s said on that page.&lt;/p&gt;
&lt;p&gt;Alternatively, you may download it from other websites like &lt;a class="link" href="https://mcversions.net/download/1.21.1" target="_blank" rel="noopener"
&gt;mcversions&lt;/a&gt; where you can choose a specific version.&lt;/p&gt;
&lt;hr&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Dedicate a folder to the server files&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Put that &lt;code&gt;server.jar&lt;/code&gt; file where you want to keep your server data. At this stage you should have a folder somewhere on your device where there is only that file.&lt;/p&gt;
&lt;hr&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Generate server files&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Run &lt;code&gt;server.jar&lt;/code&gt; file by double clicking it, it&amp;rsquo;s java executable. In a few seconds it should generate a bunch of files around it (along with &lt;code&gt;server.properties&lt;/code&gt; and &lt;code&gt;eula.txt&lt;/code&gt;). If so, move straight to step 5. It might take around 10 seconds, but If you waited and nothing happened, you need to install &lt;code&gt;jarfix&lt;/code&gt; (program to fix &amp;lsquo;java archive&amp;rsquo; execution issue on Windows) from &lt;a class="link" href="https://johann.loefflmann.net/en/software/jarfix/index.html" target="_blank" rel="noopener"
&gt;here&lt;/a&gt; or &lt;a class="link" href="https://jarfix.en.softonic.com/" target="_blank" rel="noopener"
&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Tweak server settings&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;First and foremost, you must open &lt;code&gt;eula.txt&lt;/code&gt; and set &lt;code&gt;eula&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, so that the whole file looks like this (with your date and time, of course):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;#By changing the setting below to TRUE you are indicating your agreement to our EULA (https://aka.ms/MinecraftEULA).
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;#Mon Mar 11 13:11:52 CET 2024
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;eula=true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then, if you or your friends who you are planning to play with are using cracked minecraft, you also need to go to &lt;code&gt;server.properties&lt;/code&gt; and change &lt;code&gt;online-mode&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;do not forget to save both files!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the same &lt;code&gt;server.properties&lt;/code&gt; you are also able to set difficulty, gamemode (including hardcore), max number of players, pvp, whitelist, generate structures and view distance along with other settings. I recommend to leave them default and play with them after succeeding in setting up the server to work correctly.&lt;/p&gt;
&lt;hr&gt;
&lt;ol start="6"&gt;
&lt;li&gt;Run server&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Run &lt;code&gt;server.jar&lt;/code&gt; again, a GUI (a window) should appear (it might take some time). Your server is now up and running, but it&amp;rsquo;s only local, meaning that only you can join it. You still should test that everything is working by going to minecraft, multiplayer mode, direct connection and type in &lt;code&gt;localhost&lt;/code&gt; or &lt;code&gt;127.0.0.1&lt;/code&gt;. If it returns an error, try restart your game AND launcher, restart the server and restart the PC. It might be giving errors at first but then begin working normally.&lt;/p&gt;
&lt;hr&gt;
&lt;ol start="7"&gt;
&lt;li&gt;Setup &lt;code&gt;Playit.gg&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In order to make server public and open for other people, we need to setup a way for them to connect to your server.&lt;/p&gt;
&lt;p&gt;One of the ways to do so is by using &lt;code&gt;Playit.gg&lt;/code&gt;. &lt;a class="link" href="https://www.youtube.com/watch?v=NK5lsDXIFnM&amp;amp;ab_channel=playit" target="_blank" rel="noopener"
&gt;Here&lt;/a&gt; is a concise tutorial by its developer (&lt;a class="link" href="https://www.reddit.com/r/SideProject/comments/iuk9z7/playitgg_a_tunneling_tool_so_you_can_host_a_game/" target="_blank" rel="noopener"
&gt;here&lt;/a&gt; is a reddit tread about it).&lt;/p&gt;
&lt;p&gt;In a nutshell, you need to download &lt;code&gt;Playit.gg&lt;/code&gt; from &lt;a class="link" href="https://%60%60%60Playit.gg%60%60%60/download/windows" target="_blank" rel="noopener"
&gt;official website&lt;/a&gt;, create an account/login as a guest, then create a tunnel. When created, at the very bottom of the page there is a table with attributes and values, you need one called &lt;code&gt;Allocation (Shared IP)&lt;/code&gt; (IP) OR &lt;code&gt;Domain (Auto Assigned)&lt;/code&gt; (Domain) - you and anyone who wants to connect to your server will need either of these two.&lt;/p&gt;
&lt;hr&gt;
&lt;ol start="8"&gt;
&lt;li&gt;Try in minecraft&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Run minecraft (cracked or official) of the exact same version you created your server on step 1, go to multiplayer, direct connection/add server, put there IP:port from &lt;code&gt;Playit.gg&lt;/code&gt; page from previous step OR domain. Click connect. The only thing you need to share with your friends for them to be able to join your server is either IP or domain, provided by &lt;code&gt;Playit.gg&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="how-to-run-it--shut-it-down"&gt;How to run it / shut it down
&lt;/h2&gt;&lt;h3 id="running"&gt;running
&lt;/h3&gt;&lt;p&gt;Run &lt;code&gt;server.jar&lt;/code&gt;, wait for it to launch. Run &lt;code&gt;Playit.gg&lt;/code&gt; application installed on your PC, wait for it to launch. In minecraft, go to multiplayer, paste in your IP:host OR public domain of your server, auto assigned by &lt;code&gt;Playit.gg&lt;/code&gt;, click connect.&lt;/p&gt;
&lt;h3 id="stopping"&gt;stopping
&lt;/h3&gt;&lt;p&gt;To stop the server properly you need to shut down both &lt;code&gt;Playit.gg&lt;/code&gt; app and &lt;code&gt;server.jar&lt;/code&gt; app.&lt;/p&gt;
&lt;h3 id="if-getting-errors-on-login"&gt;If getting errors on login
&lt;/h3&gt;&lt;p&gt;If getting errors, check following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Playit.gg&lt;/code&gt;&lt;/strong&gt; AND &lt;strong&gt;&lt;code&gt;server.jar&lt;/code&gt;&lt;/strong&gt; are both running. Check their consoles for any errors&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Minecraft&lt;/strong&gt; is of correct version (same as server)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Internet&lt;/strong&gt; connection is stable&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java&lt;/strong&gt; version is correct&lt;/li&gt;
&lt;li&gt;Check if &lt;strong&gt;localhost&lt;/strong&gt; is working correctly. To do so, you won&amp;rsquo;t need &lt;code&gt;Playit.gg&lt;/code&gt;, simply run &lt;code&gt;server.jar&lt;/code&gt; and try to connect to it using &lt;code&gt;localhost&lt;/code&gt; as described earlier in steps 1-6.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If errors persist, try following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Restart game and launcher, server.jar, &lt;code&gt;Playit.gg&lt;/code&gt; app and/or PC&lt;/li&gt;
&lt;li&gt;Disable and enable &lt;code&gt;Playit.gg&lt;/code&gt; tunnel, try deleting it and creating a new one&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="proscons"&gt;Pros/Cons
&lt;/h2&gt;&lt;p&gt;Pros:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Completely free&lt;/li&gt;
&lt;li&gt;Safe (you do not share you own IP or open extra ports)&lt;/li&gt;
&lt;li&gt;Works on both official and cracked minecraft&lt;/li&gt;
&lt;li&gt;Can work with mods (search for a better instruction on that)&lt;/li&gt;
&lt;li&gt;Can handle up to 20 players by default&lt;/li&gt;
&lt;li&gt;You are using your own hardware for that (you can dedicate a lot of RAM and storage)&lt;/li&gt;
&lt;li&gt;All files are stored on your device, noone has control over them except for you, you can change settings etc&lt;/li&gt;
&lt;li&gt;You can create a whitelist and have control over connections&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Cons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Might be a bit problematic to setup&lt;/li&gt;
&lt;li&gt;Your device has to be running for the server to be running&lt;/li&gt;
&lt;li&gt;Your server will take storage space and resources of your device&lt;/li&gt;
&lt;li&gt;I could figure out how to create a server of non-latest version&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="other-approaches-to-creating-a-minecraft-server"&gt;Other approaches to creating a Minecraft server
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Using hosts, like Scalacube (2.8GB, 6GB RAM for free - getting full very quickly) etc. Limited to storage space and RAM, but very easy to setup and use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using the same &lt;code&gt;server.jar&lt;/code&gt; with port forwarding (less safe, more difficult to setup, needs access to your router).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using LAN and Hamachi (not exactly a server but allows to play with friends). Might cause severe ping.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Minecraft Realms. Paid and works only with official minecraft&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>How I made my own steering wheel using only my laptop</title><link>https://demo.stack.jimmycai.com/p/no_hardware_racing_setup/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://demo.stack.jimmycai.com/p/no_hardware_racing_setup/</guid><description>&lt;h1 id="software-driven-devices-in-gaming"&gt;Software-Driven Devices in gaming
&lt;/h1&gt;&lt;p&gt;In this essay, I want to discuss opportunities that computer vision (possibly in combination with other inputs) provides in gaming, how it can be implemented, describe several approaches to it and their benefits, and discuss the theoretical future of this technology.&lt;/p&gt;
&lt;p&gt;My idea revolves around eliminating additional hardware accessories, leaving only a laptop, phone or tablet which are non-specific to gaming. Depending on the desired result, one may make marker-devices (MD for short) which are physical attributes one can use to play games.&lt;/p&gt;
&lt;h3 id="why"&gt;Why?
&lt;/h3&gt;&lt;p&gt;Hardware is expensive, inconvenient in transportation, difficult in distribution and modification, and barely sustainable in home conditions. In contrast, Software-Driven Devices (SDD for short) can be made at home; their price consists only of the cost of materials; and they are highly customizable.&lt;/p&gt;
&lt;h2 id="racing-setup"&gt;Racing setup
&lt;/h2&gt;&lt;h3 id="what"&gt;What?
&lt;/h3&gt;&lt;p&gt;The term &amp;ldquo;racing setup&amp;rdquo; here refers to devices one needs to play racing video games. Racing setups usually include a steering wheel, two or three pedals, and, in more expensive models, also gearbox, turn signals and other car controls. The most important parts of it that I will cover more profoundly in this essay are steering wheel and gas and brake pedals.&lt;/p&gt;
&lt;h3 id="how"&gt;How?
&lt;/h3&gt;&lt;p&gt;Generally, the idea behind SDD is in utilizing computer vision (through camera) as the only (or, at least, primary) source of input for a computer, eliminating need in any classical, hardware-driven-devices.&lt;/p&gt;
&lt;h4 id="steering-wheel"&gt;Steering wheel
&lt;/h4&gt;&lt;p&gt;The steering wheel has only one key property - angle. It can easily be detected by using special colored markers on the wheel for software to detect their positions and movement. By using several (at least three, theoretically) markers of different colors, sizes, or distances from the center evenly distributed along the circumference for better accuracy, steering wheel can rotate freely by 360 degrees without blind zones. If camera can capture the whole surface of the steering wheel without interruptions, then one marker should be enough; otherwise (if any objects obscure the visibility of some parts of the wheel) the method described above will help achieve identical result.&lt;/p&gt;
&lt;p&gt;To calculate angle, computer also has to know center point of the steering wheel, which can be defined at calibration (more about it later).&lt;/p&gt;
&lt;h4 id="pedals"&gt;Pedals
&lt;/h4&gt;&lt;p&gt;A pedal has upper and lower limits and current value. Limits can be set at calibration, and current value can be calculated knowing position of the corresponding marker on the screen and size of the last.&lt;/p&gt;
&lt;p&gt;Pedals are somewhat more creative in implementation than steering wheel. My approach was to hang a marker on a handle which can be moved up and down by pulling and releasing a string with your leg. This way I could achieve the best result both in terms of usability and accuracy and stability of results.&lt;/p&gt;
&lt;h3 id="practical-and-theoretical-advantages-of-sdds-in-racing-gaming"&gt;Practical and theoretical advantages of SDDs in racing gaming
&lt;/h3&gt;&lt;p&gt;1.1 Near-zero cost of your SDDs&lt;br&gt;
1.2 Full customization of your controls&lt;br&gt;
1.3 Lightweight, simple to make, easy to take with you&lt;br&gt;
2.1 Usually provides acceptable or good control (for non-competitive gameplay) - can be improved&lt;br&gt;
2.2 Can use inputs from gestures and mimics (instead of or in addition to MDs)&lt;/p&gt;
&lt;h3 id="requirements-and-limitations"&gt;Requirements and limitations
&lt;/h3&gt;&lt;p&gt;Computer vision strictly depends on lighting and camera quality. Standard laptop camera can capture 20-30 frames per second which might cause a delay which can be crucial when playing racing games. Can be solved by connecting a phone with better camera or an external camera.&lt;/p&gt;
&lt;p&gt;Lighting should be bright and even. If lighting changes between gaming sessions, software should be recalibrated.&lt;/p&gt;
&lt;h2 id="sdds-in-other-spheres"&gt;SDDs in other spheres
&lt;/h2&gt;&lt;h3 id="animal-gaming"&gt;Animal gaming
&lt;/h3&gt;&lt;p&gt;With SDD technologies animals can play video games naturally without using any hardware and adhering to physical constraints. Software could track animal&amp;rsquo;s movements and sounds and read them as an input.&lt;/p&gt;
&lt;p&gt;With such unpredictable input however, SDDs might need not just computer vision but an AI component to it to analyze input more accurately (AI might increase accuracy with any SDDs).&lt;/p&gt;
&lt;h3 id="fighting-using-magic-wands-etc"&gt;Fighting, using magic wands etc
&lt;/h3&gt;&lt;p&gt;Playing fighting games where you actually fight (with air, at least), dancing where you dance, using magic wands with real hand gestures and pronouncing spells is also possible using SDDs. Similar to VR, you can use your own body as an input device.&lt;/p&gt;
&lt;h3 id="natural-visual-or-audio-inputs"&gt;Natural visual or audio inputs
&lt;/h3&gt;&lt;p&gt;With computer monitoring player&amp;rsquo;s mimics, gestures, body movements and words, gaming might become more natural, with games receiving emotional feedback directly* rather than analyzing player actions and outcomes. It can suit highly emotional games like horrors, visual novels, (possibly new genres, revolving around emotional feedback from player) and so on with classic algorithms or AIs analyzing player&amp;rsquo;s emotions through camera and microphone and adjusting the game correspondingly.&lt;/p&gt;
&lt;p&gt;*mimics, eye movement and body language can reflect one&amp;rsquo;s mood better than actions in a game which are easier to control and less prone to emotional influence.&lt;/p&gt;
&lt;h2 id="overall-technology-advantages"&gt;Overall technology advantages
&lt;/h2&gt;&lt;p&gt;1.1 Near-zero cost of your SDDs&lt;br&gt;
1.2 Full customization of your controls&lt;br&gt;
1.3 Lightweight, simple to make, easy to take with you&lt;br&gt;
2.1 Usually provides acceptable or good control (for non-competitive gameplay)&lt;br&gt;
2.2 Can be extended to any kind of visual inputs (specific attributes, mimics, hand/body gestures, dance pad and so on) (might even eliminate need for any physical &amp;ldquo;devices&amp;rdquo;)&lt;br&gt;
2.3 Can be used by multiple users and animals&lt;br&gt;
2.4 Can be extended to be usable in non-racing games (VR with SDDs or other)&lt;br&gt;
3.1 Can give new gaming experience&lt;/p&gt;
&lt;h2 id="implementation-details"&gt;Implementation details
&lt;/h2&gt;&lt;h3 id="using-bounding-boxes-for-static-or-semi-static-inputs"&gt;Using bounding boxes for static or semi-static* inputs
&lt;/h3&gt;&lt;p&gt;Dealing with computer-vision-based input, we should always contraint it to prevent ambiguous or wrong calculations. When setting up an input marker (steering wheel, pedal, buttons, triggers etc) we shall always (unless dealing with body inputs) define areas where it is located. This way, markers can share the same color scheme and still be unambiguous to the software as they are defined in different contexts.&lt;/p&gt;
&lt;p&gt;*semi-static inputs here refer to inputs which always adhere to same rules and whose properties can be predicted (e.g. a marker moving only vertically)&lt;/p&gt;
&lt;h3 id="using-spectrum-of-colors"&gt;Using spectrum of colors
&lt;/h3&gt;&lt;p&gt;Using contrast colors for markers and algorithms to analyze colors is crucial for accuracy and stability in CV-based SDDs. Acceptable color range depends on lighting conditions, camera quality, marker color and background color.&lt;/p&gt;
&lt;p&gt;When making a CV-based controller in Python, you can simply use &lt;code&gt;numpy&lt;/code&gt; and &lt;code&gt;cv2&lt;/code&gt; libraries as following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-py" data-lang="py"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;detect_color_spots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hsv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lower_bound&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;upper_bound&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# constrain inputs to color range&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inRange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hsv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lower_bound&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;upper_bound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# constrain inputs to area&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RETR_TREE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CHAIN_APPROX_SIMPLE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# find largest contour found&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;largest_contour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contourArea&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;moments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;largest_contour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# calculate center position&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;m00&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;cX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;m10&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;m00&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;cY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;m01&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;m00&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;and then find all spots of the given color range&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-py" data-lang="py"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;red_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;spot_position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;detect_color_spots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hsv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;red_range&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;red_range&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;areas&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;steering&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;spot_position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# store the calculated position&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;steering_spot_position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spot_position&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="calibration"&gt;Calibration
&lt;/h3&gt;&lt;p&gt;Calibration is necessary to adapt software to current lighting and setup. Calibration might include steps such as setting positions, default values, limits, defining areas, adjusting color sensitivity. It might be done automatically (when feedback is given by computer itself), semi-automatically (when user gives feedback) and manually (when user sets all values themselves).&lt;/p&gt;
&lt;p&gt;Calibration methods can be combined to achieve best accuracy and customization. In my racing setup I used semi-automatic approach for inferring steering wheel center and radius with user fixing these values by pressing certain keys on keyboard. This way, user can fine tune final values without doing tedious and prone-to-error calculations themselves.&lt;/p&gt;
&lt;h2 id="afterthoughts"&gt;Afterthoughts
&lt;/h2&gt;&lt;p&gt;It must have certainly been invented before me and I am sure games and technologies as I described and designed already exist, but they remain unknown to the public. I would love to see (and possibly make) this industry grow and thrive to let everyone feel gaming differently.&lt;/p&gt;
&lt;p&gt;I think playing games by actually moving your body, making gestures that mean something in the digital universe, talking to NPCs with your own voice can bring gaming to a whole new level. Gaming can become physically active, diverse, even more immersive and even more accessible.&lt;/p&gt;
&lt;p&gt;Less accessible but more immersive option I am thinking about is playing in front of a huge screen with camera put somewhere, when you can play bowling or fight with orcs or shoot a bow as flawlessly and seamlessly as it was real life or VR, but with no equipment and no risks.&lt;/p&gt;
&lt;p&gt;This essay is inspired by one of my projects - &lt;a class="link" href="https://github.com/AnanasikDev/RacingCVController" target="_blank" rel="noopener"
&gt;Racing CV Controller (github link)&lt;/a&gt;. I already wrote a post on reddit &lt;a class="link" href="https://www.reddit.com/r/computervision/comments/1gi8xwx/homemade_nohardware_racing_setup/" target="_blank" rel="noopener"
&gt;here&lt;/a&gt; but later I wanted to extend it with more general and detailed thoughts. I think it&amp;rsquo;s more than a joke project and one day it could bring a lot of joy and new good experience to people.&lt;/p&gt;</description></item></channel></rss>